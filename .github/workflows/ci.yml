name: CDK Build and Synth

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.20.0"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Synthesize CDK app
        run: npx cdk synth

      # - name: Archive cdk.out   # SLOOOOOOW
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: cdk-out
      #     path: cdk.out

      # - name: Archive compiled js
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: js
      #     path: |
      #       **/*.js

  test-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy a lambda
        uses: ./.github/actions/local-lambda
        with:
          path: "./lambdas/validate"
          handler: "validate.handler"
          github_token: ${{ secrets.GITHUB_TOKEN }} # enables caching for layers.

      - name: Send test request
        run: |
          response=$(curl -XPOST "http://localhost:9000/2015-03-31/functions/function/invocations" -d '{}')
          echo $response
          echo $response | grep '{"result": "success"}'

  SAM-test-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy locally using SAM
        uses: ./.github/actions/sam-local

      - name: Test the validatorLambda directly
        run: sam local invoke --env-vars local-test-env.json ValidatingLambda --no-event

      - name: Start the API
        run: nohup sam local start-api --env-vars local-test-env.json --debug &

      - name: Test the validatorLambda via the API
        run: curl -XPOST "http://localhost:3000/validatorLambda" -d '{}'

  local-deployment:
    # needs:
    #   - build
    #   - test-lambda
    runs-on: ubuntu-latest
    environment: LocalStack
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy Stack against LocalStack
        uses: ./.github/actions/localstack
